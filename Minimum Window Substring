class Solution {
    public String minWindow(String s, String t) {
        if (s == null || t == null || s.length() == 0 || t.length() == 0) {
            return "";
        }

        int[] map= new int[128];
        for(char c: t.toCharArray()){
            map[c]++;
        }
        int left=0, right=0;
        int count=t.length();
        int minLength=Integer.MAX_VALUE;
        int start=0;

        while(right<s.length()){
            if(map[s.charAt(right)]>0){
                count--;
            }
            map[s.charAt(right)]--;
            right++;

            while(count==0){
                if(right-left<minLength){
                    minLength=right-left;
                    start=left;
                }
                map[s.charAt(left)]++;
                if(map[s.charAt(left)]>0){
                    count++;
                }
                left++;
            }
        }

        return minLength == Integer.MAX_VALUE ? "" : s.substring(start, start + minLength);
    }
}
