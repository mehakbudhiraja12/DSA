class Solution {
    public int peopleAwareOfSecret(int n, int delay, int forget) {
        int MOD = 1_000_000_007;
        long[] dp = new long[n + 1]; // dp[i] = people who learn secret on day i
        dp[1] = 1;
        
        long share = 0; // number of people who can share on current day
        
        for (int day = 2; day <= n; day++) {
            // people who now become eligible to share
            if (day - delay >= 1) {
                share = (share + dp[day - delay]) % MOD;
            }
            // people who now forget
            if (day - forget >= 1) {
                share = (share - dp[day - forget] + MOD) % MOD;
            }
            // new people learning today = sharers
            dp[day] = share;
        }
        
        long ans = 0;
        // sum of people who haven't forgotten by day n
        for (int i = n - forget + 1; i <= n; i++) {
            if (i >= 1) ans = (ans + dp[i]) % MOD;
        }
        
        return (int) ans;
    }
}
